MODULE(pcanTest);

SYSTEM;
pcan: PCan('/dev/pcan32', 1000000);
termout: StdOut;

PROBLEM;
   SPC termout DATION OUT SYSTEM ALPHIC GLOBAL;
   SPC pcan    DATION INOUT SYSTEM BASIC ALL GLOBAL;

   DCL stdout DATION OUT ALPHIC DIM(*,80) FORWARD STREAM CREATED(termout);
   DCL candev DATION INOUT BASIC ALL CREATED(pcan);

main: TASK MAIN;
    __cpp__(
	' struct _CanMessage {'
        '   pearlrt::Fixed<11>    identifier;'
        '   pearlrt::BitString<1> rtrRequest; '
        '   pearlrt::Fixed<4>     dataLength; '
        '   pearlrt::BitString<8> data[8];    '
        ' } _canMessage; '
    );
    DCL hello CHAR(18) INIT('PCan Test started');
    OPEN stdout;

    PUT hello TO stdout BY A, SKIP;

    OPEN candev;
    TAKE canMessage FROM candev;
    CLOSE candev;
    CLOSE stdout;    

END;


MODEND;
