MODULE(userdation_open);
! use open with all possible attributes
!SYSTEM;
! Disc defines a folder on the file system. The second parameters
! denotes the maximum number of simultaneous open files
!disc: Disc('/tmp/' ,10);

/* expected C++ code  */
__cpp__(
     ' // system decl'
     'static pearlrt::Disc s_disc("/tmp/", 10);'
     'pearlrt::Device * d_disc = & s_disc;'
);
__cpp__(
     ' // problem  decl in system part'
    'extern pearlrt::Device *d_disc;'
    'static pearlrt::SystemDationNB *_disc = '
    '      static_cast<pearlrt::SystemDationNB*>(d_disc);'
);
/*  */

PROBLEM;
!   SPC disc DATION INOUT ALL;
   DCL tableAlphicForward2u DATION OUT ALPHIC DIM(*,10) FORWARD
             CREATED(disc);

ttt: TASK;
   DCL f FIXED(31);   ! RST-value

!   OPEN tableAlphicForward2u BY OLD;
__cpp__('_tableAlphicForward2u.dationOpen(pearlrt::Dation::OLD,(pearlrt::Character<1>*)0, (pearlrt::Fixed<31>*)0);');
   OPEN tableAlphicForward2u BY NEW;
   OPEN tableAlphicForward2u BY ANY;
   OPEN tableAlphicForward2u BY OLD, IDF('test.dat');
   OPEN tableAlphicForward2u BY NEW, IDF('test.dat');
   OPEN tableAlphicForward2u BY ANY, IDF('test.dat');
   OPEN tableAlphicForward2u BY OLD, CAN;
   OPEN tableAlphicForward2u BY NEW, CAN;
   OPEN tableAlphicForward2u BY ANY, CAN;
   OPEN tableAlphicForward2u BY OLD, CAN, IDF('test.dat');
   OPEN tableAlphicForward2u BY NEW, CAN, IDF('test.dat');
   OPEN tableAlphicForward2u BY ANY, CAN, IDF('test.dat');
   OPEN tableAlphicForward2u BY OLD, PRM;
   OPEN tableAlphicForward2u BY NEW, PRM;
   OPEN tableAlphicForward2u BY ANY, PRM;
   OPEN tableAlphicForward2u BY OLD, PRM, IDF('test.dat');
   OPEN tableAlphicForward2u BY NEW, PRM, IDF('test.dat');
   OPEN tableAlphicForward2u BY ANY, PRM, IDF('test.dat');
   OPEN tableAlphicForward2u BY OLD, RST(f);
   OPEN tableAlphicForward2u BY NEW, RST(f);
   OPEN tableAlphicForward2u BY ANY, RST(f);
   OPEN tableAlphicForward2u BY OLD, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY NEW, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY ANY, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY OLD, CAN, RST(f);
   OPEN tableAlphicForward2u BY NEW, CAN, RST(f);
   OPEN tableAlphicForward2u BY ANY, CAN, RST(f);
   OPEN tableAlphicForward2u BY OLD, CAN, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY NEW, CAN, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY ANY, CAN, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY OLD, PRM, RST(f);
   OPEN tableAlphicForward2u BY NEW, PRM, RST(f);
   OPEN tableAlphicForward2u BY ANY, PRM, RST(f);
   OPEN tableAlphicForward2u BY OLD, PRM, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY NEW, PRM, IDF('test.dat'), RST(f);
   OPEN tableAlphicForward2u BY ANY, PRM, IDF('test.dat');

   ! changed sequence of parameters
   OPEN tableAlphicForward2u BY PRM, IDF('test.dat'), RST(f), OLD;
   OPEN tableAlphicForward2u BY IDF('test.dat'), RST(f), OLD, PRM;
   OPEN tableAlphicForward2u BY RST(f), OLD, PRM, IDF('test.dat');
END;
MODEND;

