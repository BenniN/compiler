MODULE(bitslice);
SYSTEM;
term: StdOut;

PROBLEM;
 SPC term DATION OUT SYSTEM ALPHIC;
 DCL console DATION OUT ALPHIC DIM(*,80) FORWARD CREATED(term);
 DCL success BIT(1) INIT('1'B);

bitSelect: PROC;
   DCL b16 BIT(16) INIT('1234'B4);
   DCL bit1 BIT(1);
   DCL index FIXED INIT(1);

   PUT 'bitSelect:', 'as BIT(16)',b16,'as 16*BIT(1)' TO console
   BY  A,SKIP,A,B1(16),SKIP,A;

   FOR i TO 16 REPEAT
      index := i;
      bit1 := b16.BIT(index);
      PUT bit1 TO console BY B1(1);
    END;
    bit1 := b16.BIT(1);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(2);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(3);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(4);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(5);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(6);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(7);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(8);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(9);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(10);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(11);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(12);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(13);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(14);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(15);
    PUT bit1 TO console BY B1(1);
    bit1 := b16.BIT(16);
    PUT bit1 TO console BY B1(1);
   PUT TO console BY SKIP;
END;  

rhsSlice: PROC;
   DCL (b15,c15) BIT(15);
   DCL (start, end) FIXED;

   b15 := '011'B CAT '555'B4;
   IF b15.BIT(1:3) NE '011'B1 THEN
      PUT 'error#1 with .BIT ' ,b15.BIT(1:3),' NE 011' TO console
        BY A,B1(3),A, SKIP;
      success = '0'B1;
   FIN;
   IF b15.BIT(3:6) NE '1010'B1 THEN
      PUT 'error#2 with .BIT ' ,b15.BIT(3:6),' NE 1010' TO console
        BY A,B1(4),A, SKIP;
      success = '0'B1;
   FIN;
   IF b15.BIT(13:15) NE '101'B1 THEN
      PUT 'error#3 with .BIT ' ,b15.BIT(13:15),' NE 101' TO console
        BY A,B1(3),A, SKIP;
      success = '0'B1;
   FIN;

/*
   start := 13;
   IF b15.BIT(start:start+2) NE '101'B1 THEN
      PUT 'error#3 with .BIT ' ,b15.BIT(start:start+2),' NE 101' TO console
        BY A,B1(3),A, SKIP;
      success = '0'B1;
   FIN;

   start := 13;
   end := 15;
   IF b15.BIT(start:end) NE '101'B1 THEN
      PUT 'error#3 with .BIT ' ,b15.BIT(start:end),' NE 101' TO console
        BY A,B1(3),A, SKIP;
      success = '0'B1;
   FIN;
*/
END;

lhsSlice: PROC;
   DCL (b15,c15) BIT(15);

   b15 := '111'B CAT '555'B4;
   b15.BIT(2) = '0'B1;

   IF b15.BIT(1:3) NE '101'B1 THEN
      PUT 'error#1a with .BIT ' ,b15.BIT(1:3),' NE 101' TO console
        BY A,B1(3),A, SKIP;
      success = '0'B1;
   FIN;

END;


T1: TASK MAIN;

    OPEN console;
    CALL rhsSlice;
    CALL lhsSlice;
    CALL bitSelect;
    IF success THEN
        PUT '*** success' TO console BY A, SKIP;
    ELSE
        PUT '*** fail' TO console BY A, SKIP;
        __cpp__("pearlrt::Control::setExitCode(1);");
    FIN;

    CLOSE console;

END;

MODEND;

