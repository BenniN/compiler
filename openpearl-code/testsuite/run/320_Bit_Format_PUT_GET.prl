/****************************************
Testing for a simple Put and Get Statement 
on a pipe as dation. Putting and getting 
of BIT strings 
****************************************/



MODULE(Bit_Format_Simple_Put_Get);
SYSTEM;
   pipe: Pipe( '/tmp/pipe', 2, 'OPEN1');
   stdout: StdOut;

PROBLEM;
SPC pipe DATION IN SYSTEM ALL GLOBAL;
SPC stdout DATION OUT SYSTEM ALPHIC GLOBAL;

DCL termout DATION OUT ALPHIC DIM(*,80)
             FORWARD NOCYCL  STREAM 
             CREATED(stdout);

DCL errors FIXED INIT(0);

check_streq: PROC (t1 CHAR(10), t2 CHAR(10));
   PUT 'actual: ', t1, ' expected: ', t2 TO termout BY A,A,A,A;
   IF t1 EQ t2 THEN
      PUT 'ok' TO termout BY A, SKIP;
   ELSE 
      PUT 'fail' TO termout BY A, SKIP;
      errors := errors + 1;
   FIN;
END;


Test1: TASK MAIN;
DCL pipe_out DATION OUT ALPHIC DIM(*,80)
             FORWARD NOCYCL  STREAM 
             CREATED(pipe);

DCL pipe_in DATION IN ALPHIC DIM(*,80)
             FORWARD NOCYCL  STREAM 
             CREATED(pipe);

     DCL b0 BIT(1) INIT('0'B1);
     DCL (text, expect) CHAR(10);
  
     DCL check FIXED(15) INIT(0);
     
     OPEN pipe_in;
     OPEN pipe_out;
     OPEN termout;

     PUT b0 TO pipe_out BY  B1(1), SKIP;
     GET text FROM pipe_in BY A, SKIP;
     expect := '0         ';
     check_streq(text,expect);

/*
     b0 = '1'B1;
     PUT b1 TO pipe_out BY  B1(1), SKIP;
     GET text FROM pipe_in BY A, SKIP;
     expect := '1         ';
     check_streq(text,expect);
*/
     PUT '1' TO pipe_out BY A,SKIP;
     GET b0 FROM pipe_in BY  B1(1), SKIP;
     PUT 'got as B1: ',b0 TO termout BY  A, B1(1), SKIP;
     CLOSE pipe_in;
     CLOSE pipe_out;

     /* ------------------- */
     PUT errors, ' errors detected' TO termout BY F(6), A, SKIP;
     CLOSE termout;

END;
MODEND;

